name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Check TypeScript
      run: npx tsc --noEmit

    - name: Build application
      run: npm run build
      env:
        DATABASE_URL: "file:./test.db"
        NEXTAUTH_SECRET: "test-secret-for-github-actions"
        NEXTAUTH_URL: "http://localhost:3000"

  database-test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run database migrations
      run: npx prisma migrate dev --name init
      env:
        DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/test_db"

    - name: Generate Prisma client
      run: npx prisma generate
      env:
        DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/test_db"
